import { Field, InputType, ObjectType } from '@nestjs/graphql';
import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';
import { ObjectId } from 'mongoose';
import { Entity } from '../entity.type';

@InputType("<%= clazz %>Input")
@ObjectType()
@Schema()
export class <%= clazz %> extends Entity {
	@Field(_ => String)
	_id: ObjectId;

<% for (let field of fieldList) { %>
	<% if (field.required) { %>
	@Field()
	<% } else { %>
	@Field({ nullable: true })
	<% } %>
	@Prop()
	<%= field.name %>: <%= field.type %>;
<%  } %>
}

@InputType('<%= clazz %>Create')
export class <%= clazz %>Create {

<% for (let field of fieldList) { %>
	<%  if (field.create) { %>
		<% if (field.required) { %>
		@Field()
		<% } else { %>
		@Field({ nullable: true })
		<% } %>
		@Prop()
		<%= field.name %>: <%= field.type %>;
	<%  } %>
<%  } %>
}

export const <%= clazz %>Schema = SchemaFactory.createForClass(<%= clazz %>);
